  S -> SS # "S" is starting emelemt in parsing tree
  S -> IS
  S -> WHS
  S -> AUXS
  S -> SS CON SS
  S -> SS CON SS CON SS
  S -> SS CON SS CON SS CON SS

  SS -> NP VP [ pers num ]
  IS -> VP

  # NP means "noun phrase"
  NP -> NN [ pers num ]
  NP -> PR [ pers num posses_0_+0 ]
  NP -> PR N [ posses_0_+1 num_1 pers_1 ]
  NP -> NP PP  [ pers_0 num_0 ]
  NP -> D N [ def per num ]
  NP -> N [ pers num ]
  NP -> D ADJ N [ def_0_1  ]

  VP -> V [ pers num ]
  VP -> V NP [ pers_0 num_0 ]
  VP -> V PR [ pers_0 num_0 obj_1_+1 ]
  VP -> V NP NP [ pers_0 num_0 ]
  VP -> VP PP [ pers_0 num_0 ]

  PP -> P NP [ ]

  PR -> he [ pers=3 num=sg posses=0 obj=0 ]
  PR -> she [ pers=3 num=sg posses=0 obj=0 ]
  PR -> it [ pers=3 num=sg posses=0 obj=0 ]
  PR -> they [ pers=3 num=pl posses=0 obj=0 ]
  
  PR -> his [ pers=3 num=sg posses=1 obj=0 ]
  PR -> him [ pers=3 num=sg posses=0 obj=1 ]
  PR -> her [ pers=3 num=sg posses=1 obj=1 ]
  PR -> its [ pers=3 num=sg posses=1 obj=1 ]
  PR -> their [ pers=3 num=pl posses=1 obj=1 ]

  P -> with [ ]
  P -> in [ ]
  P -> on [ ]
  P -> at [ ]
  P -> through [ ]

  V -> book [ pers=3 num=pl ]
  V -> books [ pers=3 num=sg ]
  V -> eat [ pers=3 num=pl ]
  V -> eats [ pers=3 num=sg ]
  V -> sleep [ pers=3 num=pl ]
  V -> sleeps [ pers=3 num=sg ]
  V -> give [ pers=3 num=pl ]
  V -> gives [ pers=3 num=sg ]
  V -> walk [ pers=3 num=pl ]
  V -> walks [ pers=3 num=sg ]
  V -> see [ pers=3 num=pl ]
  V -> sees [ pers=3 num=sg ]

  D -> the [ ]
  D -> a [ def=a ]
  D -> an [ def=an ]

  ADJ -> giant [ def=a ]
  ADJ -> red [ def=a ]
  ADJ -> orange [ def=an ]

  NN -> john [ pers=3 num=sg ]
  NN -> mary [ pers=3 num=sg ]
  NN -> houston [ pers=3 num=sg ]

  N -> apple [ pers=3 num=sg def=an ]
  N -> banana [ pers=3 num=sg def=a ]
  N -> bananas [ pers=3 num=pl def=a ]
  N -> boy [ pers=3 num=sg def=a ]
  N -> elephant [ pers=3 num=sg def=an ]
  N -> elephants [ pers=3 num=pl def=an ]
  N -> flies [ pers=3 num=sg def=a ]
  N -> flight [ pers=3 num=sg def=a ]
  N -> garden [ pers=3 num=sg def=a ]
  N -> hat [ pers=3 num=sg def=a ]
  N -> man [ pers=3 num=sg def=a ]
  N -> table  [ pers=3 num=sg def=a ]
  N -> telescope [ pers=3 num=sg def=a ]
  N -> time [ pers=3 num=sg def=a ]
  N -> way [ pers=3 num=sg def=a ]


